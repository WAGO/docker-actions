name: Download release asset
description: Download release asset
author: nosamad

inputs:
  repository:
    description: GitHub repository
    required: true
  token:
    description: GitHub auth token
    required: true
  tag:
    description: Tag name
    default:  latest
    required: false
  url-filterpattern:
    description: Download URL filter pattern (regex)
    default:  '.*'
    required: false
  working-directory:
    description: Download directory
    default:  '.'
    required: false

outputs:
  file-paths:
    description: Downloaded assets
    value: ${{ steps.download-assets.outputs.file-paths }} 

runs:
 using: composite

 steps:
   - name: Check environment
     run: |
       command -V curl
       command -V jq
       command -V bash
     shell: sh
     
   - name: Download assets and check integrity
     id: download-assets
     env:
       DOWNLOAD_ASSET_REPO: ${{ inputs.repository }}
       DOWNLOAD_ASSET_TAG: ${{ inputs.tag }}
       DOWNLOAD_ASSET_TOKEN: ${{ inputs.token }}
       DOWNLOAD_ASSET_URLFILTERPATTERN: ${{ inputs.url-filterpattern }}
     run: |
       readarray -t file_paths < <("${GITHUB_ACTION_PATH}/download-release-asset.sh")
       file_paths_uriencoded="$(printf '%s%%0A' "${file_paths[@]}")"
       echo "::set-output name=file-paths::${file_paths_uriencoded}"
     shell: bash
     working-directory: ${{ inputs.working-directory }}

   - name: Check integrity
     run: |
       readarray -t file_paths < <(cat << EOF
       ${{ steps.download-assets.outputs.file-paths }}EOF
       )
       
       for f in "${file_paths[@]}"; do
         if [[ "${f}" =~ .sha256sum$ ]]; then
           sha256sum -c "${f}"
         elif [[ "${f}" =~ .md5sum$ ]]; then
           md5sum -c "${f}"
         fi
       done
     shell: bash
     working-directory: ${{ inputs.working-directory }}


